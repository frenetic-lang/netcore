module Campus where

import Frenetic.NetCore
import qualified MacLearning
import qualified Data.Set as Set
import qualified Data.Map as Map

-- The Campus topology generated by Campus.py is as follows:
--
--    h (3) S1 (1) ----- (1) S2 (3) h
--    h (4)   (2)         (2)
--              \        /
--               \      /
--               (1)  (2)
--                  S3
--                    (3) h
--                    (4) h
--                    (5) h
--
-- where "h (n) S" means that host h is connected to switch S on (the 
-- switch's) port n, and "S (n) --- (n') S'" means that switch S,
-- port n is connected to switch S', port n'.

-- The trusted slice is:
--
--    h (3) S1 (1) ----- (1) S2 (3) h
--    h (4)

trustedSlice :: Slice
trustedSlice =
  Slice { internal = internalLocs
        , ingress = ingressMap
        , egress = egressMap }
  where
    internal = Set.fromList [Loc 1 
